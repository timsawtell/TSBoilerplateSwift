//  _<$managedObjectClassName$>.h
// DO NOT EDIT. This file is machine-generated and constantly overwritten.
// Make changes to <$managedObjectClassName$>.h instead.

#import <Foundation/Foundation.h>
#import "ModelObject.h"
<$if hasCustomSuperentity$>#import "<$customSuperentity$>.h"<$endif$>
<$checkNonTransientRelationshipCycles $>
<$foreach Relationship noninheritedRelationships do$>@class <$Relationship.destinationEntity.managedObjectClassName$>;
<$endforeach do$>
@protocol _<$managedObjectClassName$>
<$foreach Relationship noninheritedRelationshipsInIDKeyPathTopologicalOrder do$><$if ! Relationship.isTransient$><$if Relationship.userInfo.destinationEntityIDKeyPath $>
- (<$Relationship.destinationEntity.managedObjectClassName$> *)fetch<$Relationship.destinationEntity.name$>ObjectWithIDFor<$Relationship.name.initialCapitalString$>Relationship:(id)objectID;
<$endif$><$endif$><$endforeach do$>
@end
<$foreach Attribute noninheritedAttributes do$><$if Attribute.hasDefinedAttributeType$>
extern NSString * const kModelProperty<$managedObjectClassName$><$Attribute.name.initialCapitalString$>;<$endif$><$endforeach do$>
<$foreach Relationship noninheritedRelationships do$>
extern NSString * const kModelProperty<$managedObjectClassName$><$Relationship.name.initialCapitalString$>;<$endforeach do$>
<$foreach Attribute noninheritedAttributes do$><$if Attribute.hasDefinedAttributeType$>
extern NSString * const kModelDictionary<$managedObjectClassName$><$Attribute.name.initialCapitalString$>;<$endif$><$endforeach do$>
<$foreach Relationship noninheritedRelationships do$>
extern NSString * const kModelDictionary<$managedObjectClassName$><$Relationship.name.initialCapitalString$>;<$endforeach do$>
<$if hasCustomSuperentity$>
@interface _<$managedObjectClassName$> : <$customSuperentity$> <NSCoding>
<$else$>
@interface _<$managedObjectClassName$> : ModelObject <NSCoding>
<$endif$>
<$foreach Attribute noninheritedAttributes do$><$if Attribute.hasDefinedAttributeType$><$if Attribute.isReadonly$>@property (nonatomic, strong, readonly) <$Attribute.objectAttributeType$> <$Attribute.name$>;<$else$>
@property (nonatomic, strong) <$Attribute.objectAttributeType$> <$Attribute.name$>;<$endif$><$if Attribute.hasScalarAttributeType$>@property <$Attribute.scalarAttributeType$> <$Attribute.name$>Value;<$endif$><$endif$><$endforeach do$><$foreach Relationship noninheritedRelationships do$><$if Relationship.isToMany$>@property (nonatomic, strong, readonly) NSSet *<$Relationship.name$>;<$else$>
<$if Relationship.isTransient $>@property (nonatomic, weak, readwrite) <$Relationship.destinationEntity.managedObjectClassName$> *<$Relationship.name$>;<$else$>@property (nonatomic, strong, readwrite) <$Relationship.destinationEntity.managedObjectClassName$> *<$Relationship.name$>;<$endif$>
<$endif$><$endforeach do$>
<$foreach Relationship noninheritedRelationships do$>
<$if Relationship.isToMany$>- (void)add<$Relationship.name.initialCapitalString$>Object:(<$Relationship.destinationEntity.managedObjectClassName$>*)value_ settingInverse: (BOOL) setInverse;
- (void)add<$Relationship.name.initialCapitalString$>Object:(<$Relationship.destinationEntity.managedObjectClassName$>*)value_;
- (void)removeAll<$Relationship.name.initialCapitalString$>;
- (void)remove<$Relationship.name.initialCapitalString$>Object:(<$Relationship.destinationEntity.managedObjectClassName$>*)value_ settingInverse: (BOOL) setInverse;
- (void)remove<$Relationship.name.initialCapitalString$>Object:(<$Relationship.destinationEntity.managedObjectClassName$>*)value_;<$endif$><$endforeach do$><$foreach Relationship noninheritedRelationships do$><$if ! Relationship.isToMany$>- (void)set<$Relationship.name.initialCapitalString$>: (<$Relationship.destinationEntity.managedObjectClassName$>*) <$Relationship.name$>_ settingInverse: (BOOL) setInverse;
<$endif$><$endforeach do$>

@end
